// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function () {
  var contract_data = {
    abi: [{'constant': false, 'inputs': [{'name': 'status', 'type': 'string'}], 'name': 'updateStatus', 'outputs': [], 'type': 'function'}, {'constant': false, 'inputs': [{'name': 'addr', 'type': 'address'}], 'name': 'getStatus', 'outputs': [{'name': '', 'type': 'string'}], 'type': 'function'}],
    binary: '6060604052610253806100126000396000f3606060405260e060020a60003504632c215998811461002657806330ccebb5146100ed575b005b60206004803580820135601f810184900490930260809081016040526060848152610024946024939192918401918190838280828437509496505050505050503373ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604082208351815482855293839020919360026001821615610100026000190190911604601f908101939093048201929091906080908390106101e857805160ff19168380011785555b506101e39291505b8082111561021857600081556001016100d9565b6101756004356000606081815273ffffffffffffffffffffffffffffffffffffffff831682526020828152604092839020805460a0601f600260001961010060018616150201909316929092049182018490049093028301909452608084815292939091828280156102475780601f1061021c57610100808354040283529160200191610247565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b505050565b828001600101855582156100d1579182015b828111156100d15782518260005055916020019190600101906101fa565b5090565b820191906000526020600020905b81548152906001019060200180831161022a57829003601f168201915b5050505050905091905056',
    unlinked_binary: '6060604052610253806100126000396000f3606060405260e060020a60003504632c215998811461002657806330ccebb5146100ed575b005b60206004803580820135601f810184900490930260809081016040526060848152610024946024939192918401918190838280828437509496505050505050503373ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604082208351815482855293839020919360026001821615610100026000190190911604601f908101939093048201929091906080908390106101e857805160ff19168380011785555b506101e39291505b8082111561021857600081556001016100d9565b6101756004356000606081815273ffffffffffffffffffffffffffffffffffffffff831682526020828152604092839020805460a0601f600260001961010060018616150201909316929092049182018490049093028301909452608084815292939091828280156102475780601f1061021c57610100808354040283529160200191610247565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101d55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b505050565b828001600101855582156100d1579182015b828111156100d15782518260005055916020019190600101906101fa565b5090565b820191906000526020600020905b81548152906001019060200180831161022a57829003601f168201915b5050505050905091905056',
    address: '0x6f62c25828e74862ead1b282cbe1a5758f21cb9b',
    generated_with: '2.0.9',
    contract_name: 'Status'
  }

  function Contract () {
    if (Contract.Pudding == null) {
      throw new Error('Status error: Please call load() first before creating new instance of this contract.')
    }

    Contract.Pudding.apply(this, arguments)
  };

  Contract.load = function (Pudding) {
    Contract.Pudding = Pudding

    Pudding.whisk(contract_data, Contract)

    // Return itself for backwards compatibility.
    return Contract
  }

  Contract.new = function () {
    if (Contract.Pudding == null) {
      throw new Error('Status error: Please call load() first before calling new().')
    }

    return Contract.Pudding.new.apply(Contract, arguments)
  }

  Contract.at = function () {
    if (Contract.Pudding == null) {
      throw new Error('Status error: Please call load() first before calling at().')
    }

    return Contract.Pudding.at.apply(Contract, arguments)
  }

  Contract.deployed = function () {
    if (Contract.Pudding == null) {
      throw new Error('Status error: Please call load() first before calling deployed().')
    }

    return Contract.Pudding.deployed.apply(Contract, arguments)
  }

  if (typeof module != 'undefined' && typeof module.exports != 'undefined') {
    module.exports = Contract
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Status = Contract
  }
})()
